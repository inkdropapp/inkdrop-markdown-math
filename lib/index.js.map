{"version":3,"sources":["../src/index.js"],"names":["BlockMath","InlineMath","require","Math","React","Component","render","lang","props","equation","children","error","message","e","PropTypes","string","isRequired","arrayOf","module","exports","activate","markdownRenderer","remarkPlugins","push","math","remarkCodeComponents","inline_math","CodeMirror","modeInfo","name","mime","mode","ext","alias","deactivate"],"mappings":";AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA,MAAM;AAAEA,EAAAA,SAAF;AAAaC,EAAAA;AAAb,IAA4BC,OAAO,CAAC,aAAD,CAAzC;;AAEA,MAAMC,IAAN,SAAmBC,KAAK,CAACC,SAAzB,CAAmC;AAMjCC,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAxB;AACA,UAAMF,SAAS,GAAGE,IAAI,KAAK,MAAT,GAAkBP,SAAlB,GAA8BC,UAAhD;AACA,UAAMQ,QAAQ,GAAG,KAAKD,KAAL,CAAWE,QAAX,CAAoB,CAApB,CAAjB;;AACA,QAAID,QAAJ,EAAc;AACZ,UAAI;AACF,eACE,oBAAC,SAAD;AACE,UAAA,IAAI,EAAEA,QADR;AAEE,UAAA,WAAW,EAAEE,KAAK,IAAI;AACpB,mBACE;AAAM,cAAA,SAAS,EAAC;AAAhB,eACGA,KAAK,CAACC,OADT,CADF;AAKD;AARH,UADF;AAYD,OAbD,CAaE,OAAOC,CAAP,EAAU;AACV,eAAO,kCAAOA,CAAC,CAACD,OAAT,CAAP;AACD;AACF,KAjBD,MAiBO;AACL,aAAO,uDAAP;AACD;AACF;;AA9BgC;;gBAA7BT,I,eACe;AACjBI,EAAAA,IAAI,EAAEO,mBAAUC,MAAV,CAAiBC,UADN;AAEjBN,EAAAA,QAAQ,EAAEI,mBAAUG,OAAV,CAAkBH,mBAAUC,MAA5B;AAFO,C;;AAgCrBG,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,QAAQ,GAAG;AACT,QAAIC,yBAAJ,EAAsB;AACpBA,gCAAiBC,aAAjB,CAA+BC,IAA/B,CAAoCC,mBAApC;;AACAH,gCAAiBI,oBAAjB,CAAsCD,IAAtC,GAA6CrB,IAA7C;AACAkB,gCAAiBI,oBAAjB,CAAsCC,WAAtC,GAAoDvB,IAApD;AACD;;AACD,QAAIwB,mBAAJ,EAAgB;AACdA,0BAAWC,QAAX,CAAoBL,IAApB,CAAyB;AACvBM,QAAAA,IAAI,EAAE,MADiB;AAEvBC,QAAAA,IAAI,EAAE,cAFiB;AAGvBC,QAAAA,IAAI,EAAE,MAHiB;AAIvBC,QAAAA,GAAG,EAAE,EAJkB;AAKvBC,QAAAA,KAAK,EAAE,CAAC,aAAD;AALgB,OAAzB;AAOD;AACF,GAhBc;;AAkBfC,EAAAA,UAAU,GAAG,CAAE;;AAlBA,CAAjB","sourcesContent":["'use babel'\nimport PropTypes from 'prop-types'\nimport math from './remark-math'\nimport * as React from 'react'\nimport { markdownRenderer } from 'inkdrop'\nimport CodeMirror from 'codemirror'\n\nconst { BlockMath, InlineMath } = require('react-katex')\n\nclass Math extends React.Component {\n  static propTypes = {\n    lang: PropTypes.string.isRequired,\n    children: PropTypes.arrayOf(PropTypes.string)\n  }\n\n  render() {\n    const lang = this.props.lang\n    const Component = lang === 'math' ? BlockMath : InlineMath\n    const equation = this.props.children[0]\n    if (equation) {\n      try {\n        return (\n          <Component\n            math={equation}\n            renderError={error => {\n              return (\n                <span className=\"ui error message mde-error-message\">\n                  {error.message}\n                </span>\n              )\n            }}\n          />\n        )\n      } catch (e) {\n        return <span>{e.message}</span>\n      }\n    } else {\n      return <span>Invalid math block</span>\n    }\n  }\n}\n\nmodule.exports = {\n  activate() {\n    if (markdownRenderer) {\n      markdownRenderer.remarkPlugins.push(math)\n      markdownRenderer.remarkCodeComponents.math = Math\n      markdownRenderer.remarkCodeComponents.inline_math = Math\n    }\n    if (CodeMirror) {\n      CodeMirror.modeInfo.push({\n        name: 'math',\n        mime: 'text/x-latex',\n        mode: 'stex',\n        ext: [],\n        alias: ['inline_math']\n      })\n    }\n  },\n\n  deactivate() {}\n}\n"],"file":"index.js"}